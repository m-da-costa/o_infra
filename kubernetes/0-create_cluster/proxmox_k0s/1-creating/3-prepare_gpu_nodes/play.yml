- name: 1st deployment
  hosts: linux
  remote_user: magus
  gather_facts: no
  tasks:
    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:

    - name: Gather facts for first time
      ansible.builtin.setup:

    # - name: Install docker n shit
    #   shell: |
    #     curl -fsSL https://get.docker.com -o install-docker.sh
    #     sudo sh install-docker.sh
    #     sudo sh -eux <<EOF
    #     # Install newuidmap & newgidmap binaries
    #     apt-get install -y uidmap git
    #     EOF
    #     dockerd-rootless-setuptool.sh install

    - name: Install nvidia drivers
      environment:
          name: DEBIAN_FRONTEND=noninteractive 
      shell: |
        sudo rm /etc/apt/sources.list
        sudo echo "deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware" > sources.list
        sudo mv sources.list /etc/apt/
        sudo apt update
        #sudo apt install -y linux-headers-amd64
        sudo apt install -y linux-headers-$(uname -r)
        sudo apt upgrade -y
        sudo DEBIAN_FRONTEND=noninteractive apt install -y firmware-misc-nonfree nvidia-driver

    - name: Install nvidia toolkit and containerd
      shell: |
        sudo apt install -y containerd
        curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
          && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
        sudo apt-get update
        sudo apt-get install -y nvidia-container-toolkit

    - name: Configure nvidia docker runtime
      shell: |
        sudo nvidia-ctk runtime configure --runtime=containerd
    #    sudo mv /etc/k0s/

    # - name: Configure nvidia docker runtime
    #   shell: |
    #     sudo nvidia-ctk runtime configure --runtime=docker
    #     sudo systemctl restart docker
    #     nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json
    #     systemctl --user restart docker
    #     sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place

    # - name: Create nvidia containerd config
    #   shell: |
    #     sudo mkdir -p /etc/k0s/containerd.d
    #     cat > nvidia.toml <<EOF
    #     [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
    #         privileged_without_host_devices = false
    #         runtime_engine = ""
    #         runtime_root = ""
    #         runtime_type = "io.containerd.runc.v1"
    #     [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
    #         BinaryName = "/usr/bin/nvidia-container-runtime"
    #     EOF
    #     sudo mv nvidia.toml /etc/k0s/containerd.d/
    - name: Restart node
      shell: |
        sudo restart now

